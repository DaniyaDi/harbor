name: Deploy harbor

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Update kubeconfig
        run: aws eks --region us-east-1 update-kubeconfig --name education-eks-UBc9ZA6Z

      - name: Install kubectl and kubens
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/kubectl

          curl -LO https://raw.githubusercontent.com/ahmetb/kubectx/master/kubens
          chmod +x kubens
          sudo mv kubens /usr/local/bin/

      - name: Install Helm
        run: |
          curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
          chmod +x get_helm.sh
          sudo ./get_helm.sh

     
      - name: Verify kubeconfig
        run: kubectl get nodes

      - name: Check if Namespace Exists
        id: check_namespace
        run: |
          if kubectl get namespace harbor &> /dev/null; then
            echo "::set-output name=exists::true"
          else
            echo "::set-output name=exists::false"
            kubectl create ns harbor
          fi

      - name: Clone harbor
        uses: GuillaumeFalourd/clone-github-repo-action@v2.3
        with:
          depth: 1
          branch: 'main'
          owner: 'DaniyaDi'
          repository: 'harbor'
    
      - name: Access cloned repo
        run: |
           cd harbor
           ls -la

      - name: Deploy Helm Chart
        run: |
           helm repo add harbor https://helm.goharbor.io
           helm upgrade my-harbor harbor/harbor -f ./default-values.yaml -f ./values.yaml -n grafana
           
      # - name: Deploy harbor
      #   if: steps.check_namespace.outputs.exists == 'false'
      #   run: |
      #    helm repo add harbor https://helm.goharbor.io
      #    helm install my-harbor harbor/harbor --version 1.14.0 -n harbor
